name: Java CI with Gradle

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle (without tests)
      run: ./gradlew build -x test --console=plain

    - name: Deploy to EC2 using SSH
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        DATASOURCE_ENDPOINT: ${{ secrets.DATASOURCE_ENDPOINT }}
        DATASOURCE_PORT: ${{ secrets.DATASOURCE_PORT }}
        DATASOURCE_NAME: ${{ secrets.DATASOURCE_NAME }}
        DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
        DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
        APP_KEY: ${{ secrets.APP_KEY }}
        APP_SECRET: ${{ secrets.APP_SECRET }}
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > ssh_key.pem
        chmod 600 ssh_key.pem
        scp -i ssh_key.pem -o StrictHostKeyChecking=no ./build/libs/total-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/
        ssh -i ssh_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << EOF

          PID=$(pgrep -f 'total-0.0.1-SNAPSHOT.jar')
          if [ -n "$PID" ]; then
            echo "Stopping existing application with PID: $PID"
            kill -9 $PID
          fi

          nohup java -jar /home/ubuntu/total-0.0.1-SNAPSHOT.jar \
            --datasource.endpoint="${DATASOURCE_ENDPOINT}" \
            --datasource.port="${DATASOURCE_PORT}" \
            --datasource.name="${DATASOURCE_NAME}" \
            --datasource.username="${DATASOURCE_USERNAME}" \
            --datasource.password="${DATASOURCE_PASSWORD}" \
            --app.key="${APP_KEY}" \
            --app.secret="${APP_SECRET}" > /dev/null 2>&1 &

          echo "New application started"
        EOF
